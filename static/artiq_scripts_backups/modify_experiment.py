def update_script_values_by_lines(script_path, line_replacements):
    """
    Fast updating of values when you know the exact line numbers.
    Generated by Claude 3.7 Sonnet.

    Args:
        script_path (str): Path to the Python script file
        line_replacements (dict): Dictionary mapping line numbers (0-indexed) to new values
    """
    # Read all lines from the file
    with open(script_path, 'r') as file:
        lines = file.readlines()

    # Update only the specific lines
    for line_num, new_value in line_replacements.items():
        # Find the position of the numerical value in the line
        line = lines[line_num]
        equal_pos = line.find('=')
        if equal_pos != -1:
            # Extract the part before the equals sign
            prefix = line[:equal_pos + 1]
            # Find where the comment starts (if any)
            comment_pos = line.find('#', equal_pos)
            suffix = ' '+ line[comment_pos:] if comment_pos != -1 else '\n'

            # Replace the line with the new value
            lines[line_num] = f"{prefix} {new_value}{suffix}"

    # Write all lines back to the file
    with open(script_path, 'w') as file:
        file.writelines(lines)

#
# # Example usage
# script_path = 'experiment_template.py'
# line_replacements = {
#     15: 1,  # Line 11 (0-indexed) will have its value changed to 20
#     16: 3.0,  # Line 16 will have its value changed to 6.7
# }
#
# update_script_values_by_lines(script_path, line_replacements)
